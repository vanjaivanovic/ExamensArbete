{"ast":null,"code":"import _defineProperty from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/vanja/Desktop/Examensarbete/Examensarbete/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/vanja/Desktop/Examensarbete/Examensarbete/src/Components/Form/ContactForm.js\";\nimport React, { Component } from 'react';\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    };\n    _this.handleFormInputValue = _this.handleFormInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendMessageToEmail = _this.sendMessageToEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* Same function for all inputs to get their values and storage them in a state, \n  where they later are being send to a php file on function 'sendMessageToEmail' */\n\n\n  _createClass(ContactForm, [{\n    key: \"handleFormInputValue\",\n    value: function handleFormInputValue(e) {\n      e.preventDefault();\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    } //Sends message to email adress through PHP \n\n  }, {\n    key: \"sendMessageToEmail\",\n    value: function sendMessageToEmail(e) {\n      var _this2 = this;\n\n      e.preventDefault(); // Prevents page to reload when click on send button\n\n      var validatedEmail = this.state.email;\n      var regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return regEx.test(String(validatedEmail).toLowerCase());\n      var contactFormInfo = {\n        userEmail: validateEmail,\n        userName: this.state.name,\n        userMessage: this.state.message\n      };\n      console.log(contactFormInfo); //Sending the contact information to php, that is stored in the object 'contactFormInfo', with a post method\n\n      return fetch('http://localhost/Server/SendEmail.php', {\n        method: \"POST\",\n        mode: \"no-cors\",\n        body: JSON.stringify(contactFormInfo)\n      }).then(function (response) {\n        _this2.confirmationMessage();\n      }).catch(function (error) {\n        _this2.messageNotSend();\n      });\n    }\n  }, {\n    key: \"confirmationMessage\",\n    value: function confirmationMessage() {\n      console.log('thank you for your message');\n    }\n  }, {\n    key: \"messageNotSend\",\n    value: function messageNotSend() {\n      console.log('something went wrong please try again');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"second-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Kontakta oss\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-11 input-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Namn\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-11 input-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"userEmail\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"col-11 input-contact\",\n        name: \"message\",\n        placeholder: \"Skriv ditt meddelande\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2 checkbox-gdpr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6 terms-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"I accept to the Terms & Conditions regarding my personal data.\")), React.createElement(\"button\", {\n        className: \"col-4 contact-form-button\",\n        onClick: this.sendMessageToEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"SKICKA\"))));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/vanja/Desktop/Examensarbete/Examensarbete/src/Components/Form/ContactForm.js"],"names":["React","Component","ContactForm","props","state","name","email","message","handleFormInputValue","bind","sendMessageToEmail","e","preventDefault","setState","target","value","validatedEmail","regEx","test","String","toLowerCase","contactFormInfo","userEmail","validateEmail","userName","userMessage","console","log","fetch","method","mode","body","JSON","stringify","then","response","confirmationMessage","catch","error","messageNotSend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ContactForm extends Component {\n  constructor(props){\n    super(props);\n      this.state = { \n            name: \"\",\n            email: \"\",\n            message: \"\"\n    }\n\n\n    this.handleFormInputValue = this.handleFormInputValue.bind(this);\n    this.sendMessageToEmail = this.sendMessageToEmail.bind(this);\n  }\n\n\n\n/* Same function for all inputs to get their values and storage them in a state, \nwhere they later are being send to a php file on function 'sendMessageToEmail' */\nhandleFormInputValue(e){\n  e.preventDefault();  \n\n  this.setState({ \n    [e.target.name]: e.target.value  /* 'e.target.name' represents the name attribute of every input that stores: 'name', 'email', 'message' \n                                      this are therefore the same property names in 'this.state' under constructor \n                                      and must be exactly the same as the attribute values */\n  });\n\n}\n\n//Sends message to email adress through PHP \n  sendMessageToEmail(e) {\n    e.preventDefault(); // Prevents page to reload when click on send button\n\n   let validatedEmail = this.state.email;\n\n   const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n   return regEx.test(String(validatedEmail).toLowerCase());\n\n    let contactFormInfo = {\n        userEmail: validateEmail,\n        userName: this.state.name,\n        userMessage: this.state.message\n    }\n\n\n    console.log(contactFormInfo);\n\n//Sending the contact information to php, that is stored in the object 'contactFormInfo', with a post method\n  return fetch('http://localhost/Server/SendEmail.php', {\n    method: \"POST\",\n    mode: \"no-cors\",\n    body: JSON.stringify(contactFormInfo)\n    })\n    .then((response) => {\n      this.confirmationMessage();\n    })\n    .catch((error) => {\n      this.messageNotSend();\n    })\n}\n\nconfirmationMessage(){\n  console.log('thank you for your message');\n}\n\nmessageNotSend(){\n  console.log('something went wrong please try again');\n}\n\n\n  render() {\n    return (\n\n    \t<div className=\"contact-form\">\n          <h2 className=\"second-section-title\">Kontakta oss</h2>\n\t        <form>\n              <div className=\"row\">\n                <div className=\"col-11 input-contact\">\n      \t          <label>\n                  <input type=\"text\" name=\"name\" placeholder=\"Namn\" onChange={this.handleFormInputValue} required />\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"row\"> \n              <div className=\"col-11 input-contact\">\n                <label>\n                <input id=\"userEmail\" type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.handleFormInputValue} required />\n                </label>\n              </div>\n              </div>\n\n              <div className=\"row\">\n                <textarea className=\"col-11 input-contact\" name=\"message\"\n                 placeholder=\"Skriv ditt meddelande\" onChange={this.handleFormInputValue} required>\n                </textarea>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-2 checkbox-gdpr\">\n                  <input className=\"checkbox\" type=\"checkbox\" required/>\n                </div>\n\n                <div className=\"col-6 terms-text\">\n                  <p>I accept to the Terms & Conditions regarding my personal data.</p>\n                </div>\n\n                <button className=\"col-4 contact-form-button\" onClick={this.sendMessageToEmail}>SKICKA</button>\n              </div>\n\t         </form>\n        </div>\n      )\n  }\n}\n\nexport default ContactForm;\n\n\n"]},"metadata":{},"sourceType":"module"}