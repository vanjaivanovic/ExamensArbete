{"ast":null,"code":"import _defineProperty from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/vanja/Desktop/ExamensArbeteKafe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/vanja/Desktop/ExamensArbeteKafe/src/Components/Form/ContactForm.js\";\nimport React, { Component } from 'react';\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    };\n    _this.handleFormInputValue = _this.handleFormInputValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.sendMessageToEmail = _this.sendMessageToEmail.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /* Same function for all inputs to get their values and storage them in a state, \n  where they later are being send to a php file on function 'sendMessageToEmail' */\n\n\n  _createClass(ContactForm, [{\n    key: \"handleFormInputValue\",\n    value: function handleFormInputValue(e) {\n      e.preventDefault();\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n    /* Uses an advanced RegEx that controls if email is correct.\n    Returns true or false. */\n\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail() {\n      var email = this.state.email;\n      var regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return regEx.test(String(email).toLowerCase());\n    } //Sends message to email adress through PHP \n\n  }, {\n    key: \"sendMessageToEmail\",\n    value: function sendMessageToEmail(e) {\n      var _this2 = this;\n\n      e.preventDefault(); // Prevents page to reload when click on send button\n\n      if (this.validateEmail()) {\n        console.log('correct email');\n        var contactFormInfo = {\n          userEmail: this.state.email,\n          userName: this.state.name,\n          userMessage: this.state.message //Sending the contact information to php, that is stored in the object 'contactFormInfo', with a post method\n\n        };\n        return fetch('http://localhost/SendEmail.php', {\n          method: \"POST\",\n          mode: \"no-cors\",\n          body: JSON.stringify(contactFormInfo)\n        }).then(function (response) {\n          _this2.confirmationMessage();\n        }).catch(function (error) {\n          _this2.messageNotSend();\n        });\n      } else {\n        console.log('invalid email');\n      }\n    }\n  }, {\n    key: \"confirmationMessage\",\n    value: function confirmationMessage() {\n      this.setState({\n        confirmationMessage: \"Tack för ditt meddelande! Vi hör av oss så fort vi kan.\"\n      });\n    }\n  }, {\n    key: \"messageNotSend\",\n    value: function messageNotSend() {\n      this.setState({\n        confirmationMessage: \"Något gick fel, prova igen!\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"contact-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"second-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Kontakta oss\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.confirmationMessage), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-11 input-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Namn\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-11 input-contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"userEmail\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"col-11 input-contact\",\n        name: \"message\",\n        placeholder: \"Skriv ditt meddelande\",\n        onChange: this.handleFormInputValue,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2 checkbox-gdpr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"checkbox\",\n        type: \"checkbox\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6 terms-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Jag godk\\xE4nner anv\\xE4ndarvillkor och bekr\\xE4ftar att jag l\\xE4st \", React.createElement(\"a\", {\n        href: \"/Gdpr\",\n        className: \"terms-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"dataskyddspolicyn\"), \".\")), React.createElement(\"button\", {\n        className: \"col-4 col-lg-2 contact-form-button\",\n        onClick: this.sendMessageToEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"SKICKA\"))));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/vanja/Desktop/ExamensArbeteKafe/src/Components/Form/ContactForm.js"],"names":["React","Component","ContactForm","props","state","name","email","message","handleFormInputValue","bind","sendMessageToEmail","e","preventDefault","setState","target","value","regEx","test","String","toLowerCase","validateEmail","console","log","contactFormInfo","userEmail","userName","userMessage","fetch","method","mode","body","JSON","stringify","then","response","confirmationMessage","catch","error","messageNotSend"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ContactForm extends Component {\n  constructor(props){\n    super(props);\n      this.state = { \n            name: \"\",\n            email: \"\",\n            message: \"\"\n    }\n\n\n    this.handleFormInputValue = this.handleFormInputValue.bind(this);\n    this.sendMessageToEmail = this.sendMessageToEmail.bind(this);\n  }\n\n\n\n/* Same function for all inputs to get their values and storage them in a state, \nwhere they later are being send to a php file on function 'sendMessageToEmail' */\nhandleFormInputValue(e){\n  e.preventDefault();  \n\n  this.setState({ \n    [e.target.name]: e.target.value  /* 'e.target.name' represents the name attribute of every input that stores: 'name', 'email', 'message' \n                                      this are therefore the same property names in 'this.state' under constructor \n                                      and must be exactly the same as the attribute values */\n  });\n\n}\n\n  /* Uses an advanced RegEx that controls if email is correct.\n  Returns true or false. */\n\n  validateEmail(){\n    let email = this.state.email;\n    const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regEx.test(String(email).toLowerCase());\n  }\n\n//Sends message to email adress through PHP \n  sendMessageToEmail(e) {\n    \n   e.preventDefault(); // Prevents page to reload when click on send button\n\n   if(this.validateEmail()){\n    console.log('correct email');\n\n    let contactFormInfo = {\n        userEmail: this.state.email,\n        userName: this.state.name,\n        userMessage: this.state.message\n    }\n\n//Sending the contact information to php, that is stored in the object 'contactFormInfo', with a post method\n  return fetch('http://localhost/SendEmail.php', {\n    method: \"POST\",\n    mode: \"no-cors\",\n    body: JSON.stringify(contactFormInfo)\n    })\n    .then((response) => {\n      this.confirmationMessage();\n    })\n    .catch((error) => {\n      this.messageNotSend();\n    })\n\n     } else {\n      console.log('invalid email');\n    }\n    \n}\n\nconfirmationMessage(){\n  this.setState({\n    confirmationMessage: \"Tack för ditt meddelande! Vi hör av oss så fort vi kan.\"\n  })\n}\n\nmessageNotSend(){\n   this.setState({\n    confirmationMessage: \"Något gick fel, prova igen!\"\n  })\n}\n\n\n  render() {\n    return (\n\n      <div className=\"contact-form\">\n          <h2 className=\"second-section-title\">Kontakta oss</h2>\n          <p>{this.state.confirmationMessage}</p>\n          <form>\n              <div className=\"row\">\n                <div className=\"col-11 input-contact\">\n                  <label>\n                  <input type=\"text\" name=\"name\" placeholder=\"Namn\" onChange={this.handleFormInputValue} required />\n                  </label>\n                </div>\n              </div>\n\n              <div className=\"row\"> \n              <div className=\"col-11 input-contact\">\n                <label>\n                <input id=\"userEmail\" type=\"text\" name=\"email\" placeholder=\"Email\" onChange={this.handleFormInputValue} required />\n                </label>\n              </div>\n              </div>\n\n              <div className=\"row\">\n                <textarea className=\"col-11 input-contact\" name=\"message\"\n                 placeholder=\"Skriv ditt meddelande\" onChange={this.handleFormInputValue} required>\n                </textarea>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"col-2 checkbox-gdpr\">\n                  <input className=\"checkbox\" type=\"checkbox\" required/>\n                </div>\n\n                <div className=\"col-6 terms-text\">\n                  <p>Jag godkänner användarvillkor och bekräftar att jag läst <a href=\"/Gdpr\" className=\"terms-link\">dataskyddspolicyn</a>.</p>\n                </div>\n\n                <button className=\"col-4 col-lg-2 contact-form-button\" onClick={this.sendMessageToEmail}>SKICKA</button>\n              </div>\n           </form>\n        </div>\n      )\n  }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}